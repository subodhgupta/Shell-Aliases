# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignorespace:ignoreboth:erasedups
HISTTIMEFORMAT='%F %T '
# Igore lines consisting of just one or two characters are discarded from the history (e.g. ls commands).
HISTIGNORE=?:ls:ps:

# append to the history file, don't overwrite it
shopt -s histappend
# attempt to save all lines of a multiple-line command in the same history entry
shopt -s cmdhist
# save multi-line commands to the history with embedded newlines
#shopt -s lithist

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=-1
HISTFILESIZE=-1


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'
#alias ls='ls -lrt'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


##Use Sudo with Aliases
alias sudo='sudo '

##Change cd.. to "cd .."##

alias cd..='cd ..'
## Colorize the ls output

alias ls='ls --color=auto'
## Use a long listing format with most recently updated files at the bottom.

alias ll='ls -Flrt'
##-F append indicator (one of */=>@|) to entries
## Show hidden files

alias l.='ls -dlrt .* --color=auto'
## Search for a process

alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'
## Keep forgetting the flags to extract a tarball?

alias untar='tar -zxvf'
## List the processes using the most CPU time

alias hogs='ps uxga | sort --key=3.1 -n'
## List files in order of ascending their size

function lsdu() { ls -l $* | sort --key=5.1 -n; };
## Count the number of files in current directory

alias lsc='ls -l | wc -l'
## Find files in the current/root directory by name

alias ff='find . -name $1'
alias fr='find / -name $1'
## Search history

alias hg='history | grep -i'
## Grabs the disk usage in the current directory

alias usage='du -ch | grep total'
## Gets the total disk usage on your machine

alias totalusage='df -hl --total | grep total'
## Gives you what is using the most space. Top 10

alias most='du -hsx * | sort -rh | head -10'
## Start vi with sudo

alias svi='sudo vi'
## Resume wget by default

alias wget='wget -c'
## See memory information

alias meminfo='free -m -l -t'
##Create Parent directories on demand##

alias mkdir='mkdir -pv'
## Get top process eating memory

alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
## Get top process eating cpu

alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
## Get server cpu info

alias cpuinfo='lscpu'
## Stop after sending count ECHO_REQUEST packets

alias ping='ping -c 5'
## Do not wait interval 1 second, go fast

alias fastping='ping -c 100 -s.2'
## All of our servers eth1 is connected to the Internets via vlan / router etc

alias dnstop='dnstop -l 5  eth1'
alias vnstat='vnstat -i eth1'
alias iftop='iftop -i eth1'
alias tcpdump='tcpdump -i eth1'
alias ethtool='ethtool eth1'
## Create shortcut commands

alias path='echo -e ${PATH//:/\\n}'
alias nowtime='date +"%T"'
alias nowdate='date +"%d-%m-%Y"'
## Get local ip
alias ipi='ipconfig getifaddr en0'

## tail commands
alias tailcron='tail -f /var/log/cron.log'

## directory commands
alias crond='cd /etc/cron.d'
alias scriptd='cd ~/scripts'
alias log='cd /var/log'

function hd { a=$HISTCMD; echo $a; echo $1; echo $(($a%$1)); for i in $(seq $1 $a); do echo $i; history -d $i; done; }

